FROM nvidia/cuda:12.4.1-devel-ubuntu22.04

RUN apt-get update && \
    apt-get install -y wget git cmake

RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/sbsa/cuda-keyring_1.1-1_all.deb && \
    if [ "$(uname -m)" != "x86_64" ]; then \
        dpkg -i cuda-keyring_1.1-1_all.deb; \
        apt-get update; \
        apt-get -y install -y nvpl; \
    else \
        apt-get update; \
        apt-get install -y libopenblas-dev; \
    fi

RUN git clone https://github.com/eth-cscs/node-burn.git && \
    cd node-burn && \
    if [ "$(uname -m)" != "x86_64" ]; then \
        sed -i 's/find_package(BLAS REQUIRED)/find_package(nvpl REQUIRED COMPONENTS blas)/' CMakeLists.txt; \
        sed -i 's/BLAS::BLAS/nvpl::lapack_lp64_omp/' CMakeLists.txt; \
    fi && \
    cmake -DCMAKE_BUILD_TYPE=Release -DTF32=ON -DDOUBLE=OFF -B build && \
    cmake -DCMAKE_BUILD_TYPE=Release -B build-f64&& \
    cmake --build build && \
    cmake --build build-f64 && \
    cp build/burn /usr/local/bin && \
    cp build-f64/burn /usr/local/bin/burn-f64 && \
    cd .. \
    rm -rf node-burn

FROM nvidia/cuda:12.4.1-runtime-ubuntu22.04

COPY --from=0 cuda-keyring_1.1-1_all.deb cuda-keyring_1.1-1_all.deb

RUN  if [ "$(uname -m)" != "x86_64" ]; then \
         dpkg -i cuda-keyring_1.1-1_all.deb; \
         apt-get update; \
         apt-get -y install -y libgomp1 nvpl-blas; \
     else \
         apt-get update; \
         apt-get -y install -y libgomp1 libopenblas-dev; \
     fi

COPY --from=0 /usr/local/bin/burn /usr/local/bin/burn
COPY --from=0 /usr/local/bin/burn-f64 /usr/local/bin/burn-f64
